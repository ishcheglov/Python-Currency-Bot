import os
import telebot
from dotenv import load_dotenv, find_dotenv
from currency_converter import CurrencyConverter
from telebot import types

"""
–¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ currency_converter. –û—Ç—Ä–∞–±–æ—Ç–∞–Ω—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
–≤–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞. –ö–Ω–æ–ø–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç USD/EUR, EUR/USD, USD/GBP,–µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ —Å –≤—ã–±–æ—Ä–æ–º –≤–∞–ª—é—Ç. BOT_TOKEN 
–∑–∞—Å–µ–∫—Ä–µ—á–µ–Ω —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ dotenv. –ö–æ–º–∞–Ω–¥–∞ /start –∑–∞–ø—É—Å–∫ –∫–æ–Ω–≤–µ—Ä—Çe—Ä–∞, –∫–æ–º–∞–Ω–¥–∞ /help –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è 
–ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤ –Ω–∞—á–∞–ª–µ –∏ –ø–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã. 
"""

if not find_dotenv():
    exit("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ç.–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª .env")
else:
    load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
commands = ["start", "help"]

bot = telebot.TeleBot(BOT_TOKEN)
currency = CurrencyConverter()
amount = 0


@bot.message_handler(commands=["start"])
def start(message):  # –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    video = "currency_klip.mp4"
    file = open(f"video/{video}", "rb")
    bot.send_video(message.chat.id, file)

    bot.send_message(message.chat.id, f"<b><i> üëã –ü—Ä–∏–≤–µ—Ç, —è —á–∞—Ç –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç "
                                      f"–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É.</i></b>", parse_mode="HTML")
    bot.send_message(message.chat.id, f"<b><i> –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É.</i></b>", parse_mode="HTML")
    bot.send_message(message.chat.id, f"<b><i> –ü–æ—Å–ª–µ –≤–≤–µ–¥–µ–Ω–∏—è —Å—É–º–º—ã –∏ –¥–æ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç "
                                      f"–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:  "
                                      f"/{commands[1]}.</i></b>", parse_mode="HTML")

    bot.register_next_step_handler(message, add_summa)


@bot.message_handler(commands=["help"])
def my_help(message):  # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    bot.send_message(message.chat.id, f"<b><i> –ß–∞—Ç –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É.</i></b> \n\n"
                                      f"–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /{commands[0]}.\n"
                                      f"–ü–æ—è–≤–∏—Ç—Å—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É.\n"
                                      f"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º –±–æ–ª—å—à–µ –Ω—É–ª—è. \n"
                                      f"–°—Ç–∞–Ω–æ–≤—è—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–∞—Ä—ã –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã.\n"
                                      f"–ï—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –ø–∞—Ä—É.\n"
                                      f"–ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–æ–≤ —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.\n"
                                      f"–ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–∏ –≤–≤–µ–¥–µ–Ω–∏–∏ "
                                      f"–Ω–æ–≤–æ–π —Å—É–º–º—ã.", parse_mode="HTML")


def add_summa(message):  # –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    global amount
    try:
        amount = int(message.text.strip())

    except ValueError:
        bot.send_message(message.chat.id, "üÜò –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É")
        bot.register_next_step_handler(message, add_summa)

    if amount < 0 and amount != str:
        bot.send_message(message.chat.id, "üÜò –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É")
        bot.register_next_step_handler(message, add_summa)

    elif amount > 0 and amount != str:
        marcup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton("USD/EUR", callback_data="usd/eur")
        button2 = types.InlineKeyboardButton("EUR/USD", callback_data="eur/usd")
        button3 = types.InlineKeyboardButton("USD/GBP", callback_data="usd/gbp")
        button4 = types.InlineKeyboardButton("–í—ã–±–æ—Ä –≤–∞–ª—é—Ç", callback_data="if")
        marcup.add(button1, button2, button3, button4)
        bot.send_message(message.chat.id, f"<b><i> üëå –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç."
                                          f"</i></b>", reply_markup=marcup, parse_mode="HTML")


@bot.callback_query_handler(func=lambda call: True)
def callback(call):  # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞ –ø–∞—Ä—ã –≤–∞–ª—é—Ç.
    if call.data != "if":
        values = call.data.upper().split("/")
        result = currency.convert(amount, values[0], values[1])
        bot.send_message(call.message.chat.id, f"‚úÖ {values[0]} >>> {values[1]}: {round(result, 2)}\n"
                                               f"–ú–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É")
        bot.register_next_step_handler(call.message, add_summa)

    else:
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ —Å–ª—ç—à")
        bot.register_next_step_handler(call.message, my_values)


def my_values(message):  # –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç.
    try:
        values = message.text.upper().split("/")
        result = currency.convert(amount, values[0], values[1])
        bot.send_message(message.chat.id, f"‚úÖ {values[0]} >>> {values[1]}: {round(result, 2)}\n"
                                          f"–ú–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É")
        bot.register_next_step_handler(message, add_summa)
    except Exception:
        bot.send_message(message.chat.id, "üÜò –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –≤–∞–ª—é—Ç —Å–Ω–æ–≤–∞")
        bot.register_next_step_handler(message, my_values)


bot.polling(non_stop=True)
